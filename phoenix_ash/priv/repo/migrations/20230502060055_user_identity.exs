defmodule PhoenixAsh.Repo.Migrations.UserIdentity do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:user_identity, primary_key: false) do
      add :refresh_token, :text
      add :access_token_expires_at, :utc_datetime_usec
      add :access_token, :text
      add :uid, :text, null: false
      add :strategy, :text, null: false
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true

      add :user_id,
          references(:user,
            column: :id,
            name: "user_identity_user_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end

    create unique_index(:user_identity, [:strategy, :uid, :user_id],
             name: "user_identity_unique_on_strategy_and_uid_and_user_id_index"
           )
  end

  def down do
    drop_if_exists unique_index(:user_identity, [:strategy, :uid, :user_id],
                     name: "user_identity_unique_on_strategy_and_uid_and_user_id_index"
                   )

    drop table(:user_identity)

    drop constraint(:user_identity, "user_identity_user_id_fkey")
  end
end